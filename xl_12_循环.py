"""
程序的三大流程：顺序、分支、循环
while 语句基本语法：

初始条件设置——通常是重复执行的 计数器
    while 条件（判断 计数器 是否达到 目标次数）：
          条件满足时，做的事情1
          条件满足时，做的事情2
          条件满足时，做的事情3
          ...

          处理条件（计数器+1）
循环结束后，之前定义的计数器的条件数值是依旧存在的
"""
#  打印5遍 hello  python
i = 0
while i <= 4:
    print("Hello python")
    i += 1
print("循环结束后i的值：%d" % i)

"""
死循环
"""
"""
1、在 while 上方定义一个变量，用于 存放最终结果
2、在 循环体 内部，每次循环都用 最新的计算结果，更新 之前定义的变量

计算0~100之间所有数字的累计求和结果
"""
i = 0
result = 0

while i <= 100:
    print(i)
    #  每次循环 让变量 result 和 i 相加
    result += i
    i += 1
print("0~100之间的数字求和结果为：%d" % result)

"""
偶数求和：
    计算0~100之间的所有偶数累加结果
"""
i = 0
result = 0
while i <= 100:
    #  判断i是否为偶数
    if i % 2 == 0:  # i % 2 !== 0: 奇数
        print(i)
        result += i

    i += 1
print("0~100之间所有的偶数和为：%d" % result)

"""
1、 break
     某一条件满足时，退出循环，不再执行后续重复的代码（小条件成立时，退出循环。执行循环以外的代码） 条件满足 退出循环
     0~10 i =  3 时 只输出 0 1 2
2、 continue
     某一条件满足时，不执行后续重复的代码(小条件成立时，推出循环。不执行循环以外的代码) 只排除一个特定条件
     0~10 i = 3 时  输出 0 1 2 4 5 6 7 8 9 10 不输出 3 剩下的都输出
"""
#  break
i = 0
while i <= 10:
    #  当 i = 3时，退出循环
    if i == 3:
        #  注意，在使用 continue 这个关键字时，需要确认循环的技术是否修改，否则会导致死循环
        i += 1
        continue  # break
    print(i)

    i += 1
print("over")

"""
循环嵌套 语法格式：
    while 条件1：
        条件满足时，做的事情1
        条件满足时，做的事情2
        条件满足时，做的事情3
        ...
        while 条件2：
            条件满足时，做的事情1
            条件满足时，做的事情2
            条件满足时，做的事情3
            ...
            处理条件2
    处理条件1
"""
#  打印五行小星星*
#  在控制台输出五行 * ，每一行星号数量一次递增
row = 1

#    1、不用嵌套循环 !!!!!
# while row <= 5:
#     print("*" * row)
#     row += 1


# 2、使用嵌套循环
while row <= 9:
    #  每一行打印的 * 与行数相同
    #  增加一个小的循环，处理每一列的 * 显示
    col = 1  # 定义列的变量
    while col <= row:
        print("*", end="")  # end 表示不换行：每个*之间没有换行
        col += 1
    # print("行数：%d" % row)
    print("")  # 一行输出完后，增加换行 ！！！
    row += 1
